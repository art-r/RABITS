version: '3'

services:
  db:
    image: mariadb:latest
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --innodb-file-per-table=1 --skip-innodb-read-only-compressed
    restart: always
    volumes:
      - db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=
    env_file:
      - db_secret.env

  redis:
    image: redis:alpine
    command: --requirepass somepwd # SET THIS
    restart: always
    environment:
      - REDIS_HOST_PASSWORD=somepwd # SET THIS

  app:
    image: nextcloud:fpm-alpine
    restart: always
    volumes:
      - nextcloud:/var/www/html
    environment:
      - MYSQL_HOST=db
      - REDIS_HOST=redis
      - REDIS_HOST_PASSWORD=somepwd # SET THIS
      - NEXTCLOUD_TRUSTED_DOMAINS=
      - PHP_MEMORY_LIMIT=102400M # 100 GB
      - PHP_UPLOAD_LIMIT=102400M # 100 GB
    env_file:
      - db_secret.env
    depends_on:
      - db
      - redis
      networks:
        crowdsec_test:
          ipv4_address: 172.20.0.2

  web:
    build: ./web
    restart: always
    volumes:
      - nextcloud:/var/www/html:ro
      - logs:/var/log/nginx
    environment:
      - VIRTUAL_HOST=
      - LETSENCRYPT_HOST=
      - LETSENCRYPT_EMAIL=
    depends_on:
      - app
    networks:
      - proxy-tier
      - default

  cron:
    image: nextcloud:fpm-alpine
    restart: always
    volumes:
      - nextcloud:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

  proxy:
    build: ./proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - logs:/var/log/nginx
    networks:
      - proxy-tier
      crowdsec_test:
        ipv4_address: 172.20.0.3

  letsencrypt-companion:
    image: nginxproxy/acme-companion
    restart: always
    volumes:
      - certs:/etc/nginx/certs
      - acme:/etc/acme.sh
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy-tier
      crowdsec_test:
        ipv4_address: 172.20.0.4
    depends_on:
      - proxy
  
  crowdsec:
    image: crowdsecurity/crowdsec
    restart: always
    environment:
      # this is the list of collections we want to install
      # https://hub.crowdsec.net/author/crowdsecurity/collections/nginx
      COLLECTIONS: "crowdsecurity/nginx"
      GID: "${GID-1000}"
    depends_on:
      - proxy
    volumes:
      - ./crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml
      - logs:/var/log/nginx
      - crowdsec-db:/var/lib/crowdsec/data/
      - crowdsec-config:/etc/crowdsec/
    networks:
      crowdsec_test:
        ipv4_address: 172.20.0.5

volumes:
  db:
  nextcloud:
  certs:
  acme:
  vhost.d:
  html:
  logs:
  crowdsec-db:
  crowdsec-config:

networks:
  proxy-tier:
  crowdsec_test:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24